syntax = "proto3";
package cosmos_sdk.x.msgauth.v1;

option go_package            = "github.com/cosmos/cosmos-sdk/x/slashing/types";
option (gogoproto.equal_all) = true;

import "third_party/proto/cosmos-proto/cosmos.proto";
import "third_party/proto/gogoproto/gogo.proto";
import "types/types.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/any.proto";


message SendAuthorization{
    option (gogoproto.equal) = true;
    option (gogoproto.goproto_getters)  = false;
    option (cosmos_proto.implements_interface) = "*AuthorizationI";

    repeated cosmos_sdk.v1.Coin spend_limit = 1 [
        (gogoproto.nullable)     = false,
        (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins",
        (gogoproto.moretags) = "yaml:\"spend_limit\""
    ];
}

// GenericAuthorization grants the permission to execute any transaction of the provided
// sdk.Msg type without restrictions
message GenericAuthorization{
    // option (gogoproto.equal) = true;
    option (gogoproto.goproto_getters)  = false;

    google.protobuf.Any message = 1 [
        (gogoproto.nullable)     = false,
        (cosmos_proto.accepts_interface) = "github.com/cosmos/cosmos-sdk/types.Msg",
        (gogoproto.moretags) = "yaml:\"message\""
    ];
}

// MsgGrantAuthorization grants the provided authorization to the grantee on the granter's
// account with the provided expiration time.
message MsgGrantAuthorization{
    option (gogoproto.equal) = true;
    option (gogoproto.goproto_getters) = false;

    bytes granter = 1 [(gogoproto.casttype) = "github.com/cosmos/cosmos-sdk/types.AccAddress"];
    bytes grantee = 2 [(gogoproto.casttype) = "github.com/cosmos/cosmos-sdk/types.AccAddress"];

    // Authorization authorization = 3;
    google.protobuf.Any authorization = 3 [
        (cosmos_proto.accepts_interface) = "AuthorizationI"
    ];
    google.protobuf.Timestamp expiration = 4 [
        (gogoproto.nullable)     = false,
        (gogoproto.stdtime)  = true
    ];
}

// MsgRevokeAuthorization revokes any authorization with the provided sdk.Msg type on the
// granter's account with that has been granted to the grantee.
message MsgRevokeAuthorization{
    option (gogoproto.goproto_getters) = false;

    bytes granter = 1 [(gogoproto.casttype) = "github.com/cosmos/cosmos-sdk/types.AccAddress"];
    bytes grantee = 2 [(gogoproto.casttype) = "github.com/cosmos/cosmos-sdk/types.AccAddress"];
    string authorization_msg_type = 3 [(gogoproto.moretags)  = "yaml:\"authorization_msg_type\""];
}

message AuthorizationGrant{
    google.protobuf.Any authorization = 1 [
        (cosmos_proto.accepts_interface) = "AuthorizationI"
    ];
    int64 expiration = 2;
}

// MsgExecAuthorized attempts to execute the provided messages using
// authorizations granted to the grantee. Each message should have only
// one signer corresponding to the granter of the authorization.
message MsgExecAuthorized {
    option (gogoproto.goproto_getters) = false;

    bytes grantee = 1 [(gogoproto.casttype) = "github.com/cosmos/cosmos-sdk/types.AccAddress"];
    repeated google.protobuf.Any msgs = 2 [
        (cosmos_proto.accepts_interface) = "github.com/cosmos/cosmos-sdk/types.Msg",
        (gogoproto.moretags) = "yaml:\"msgs\""
    ];
}